/* 现代化技能展示样式 */

/* 技能卡片样式 */
.skill-card-modern {
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.05) 0%, 
        rgba(255, 255, 255, 0.02) 100%);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    padding: 25px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.skill-card-modern::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.05) 50%, 
        transparent 100%);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
}

.skill-card-modern:hover::before {
    transform: translateX(100%);
}

.skill-card-modern:hover {
    transform: translateY(-5px);
    box-shadow: 
        0 10px 30px rgba(0, 180, 216, 0.2),
        0 0 0 1px rgba(0, 180, 216, 0.3);
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.08) 0%, 
        rgba(255, 255, 255, 0.03) 100%);
}

/* 技能图标包装器 */
.skill-icon-wrapper {
    width: 50px;
    height: 50px;
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 15px;
    position: relative;
    overflow: hidden;
}

.skill-icon-wrapper i {
    color: white;
    font-size: 1.5rem;
    z-index: 1;
    position: relative;
}

.skill-icon-wrapper::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, 
        rgba(255, 255, 255, 0.2) 0%, 
        transparent 70%);
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.3s ease;
}

.skill-card-modern:hover .skill-icon-wrapper::after {
    transform: translate(-50%, -50%) scale(2);
}

/* 技能卡片标题 */
.skill-card-modern h4 {
    color: #fff;
    font-size: 1.2rem;
    margin-bottom: 10px;
    font-weight: 600;
}

/* 技能卡片描述 */
.skill-card-modern p {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    line-height: 1.6;
    margin: 0;
}

/* 手风琴容器 */
.skills-accordion {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

/* 手风琴项目 */
.skill-accordion-item {
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.03) 0%, 
        rgba(255, 255, 255, 0.01) 100%);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 15px;
    overflow: hidden;
    transition: all 0.3s ease;
}

.skill-accordion-item:hover {
    border-color: rgba(0, 180, 216, 0.3);
    box-shadow: 0 5px 20px rgba(0, 180, 216, 0.1);
}

/* 手风琴头部 */
.skill-accordion-header {
    padding: 20px 25px;
    display: flex;
    align-items: center;
    gap: 15px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    background: rgba(255, 255, 255, 0.02);
}

.skill-accordion-header:hover {
    background: rgba(255, 255, 255, 0.05);
}

.skill-accordion-header.active {
    background: linear-gradient(135deg, 
        rgba(0, 180, 216, 0.1) 0%, 
        rgba(0, 180, 216, 0.05) 100%);
    border-bottom: 1px solid rgba(0, 180, 216, 0.2);
}

.skill-accordion-header i:first-child {
    font-size: 1.3rem;
    color: #00b4d8;
    width: 30px;
}

.skill-accordion-header span {
    flex: 1;
    color: rgba(255, 255, 255, 0.9);
    font-size: 1.05rem;
    font-weight: 500;
}

/* 手风琴箭头 */
.accordion-arrow {
    color: rgba(255, 255, 255, 0.5);
    transition: transform 0.3s ease;
    margin-left: auto;
}

.skill-accordion-header.active .accordion-arrow {
    transform: rotate(180deg);
    color: #00b4d8;
}

/* 手风琴内容 */
.skill-accordion-content {
    padding: 0 25px;
    max-height: 0;
    overflow: hidden;
    transition: all 0.3s ease;
    color: rgba(255, 255, 255, 0.75);
    line-height: 1.7;
    font-size: 0.95rem;
}

.skill-accordion-header.active + .skill-accordion-content,
.skill-accordion-content[style*="display: block"] {
    max-height: 200px;
    padding: 20px 25px;
}

/* 技能顶部区域响应式 */
@media (max-width: 968px) {
    .skills-top-section {
        grid-template-columns: 1fr !important;
    }
}

/* 核心能力和复合能力并排布局响应式 */
@media (max-width: 1024px) {
    .skills-abilities-grid {
        grid-template-columns: 1fr !important;
        gap: 40px !important;
    }
}

/* 响应式设计 */
@media (max-width: 768px) {
    .skill-card-modern {
        padding: 20px;
    }
    
    .skill-card-modern h4 {
        font-size: 1.1rem;
    }
    
    .skill-card-modern p {
        font-size: 0.85rem;
    }
    
    .skill-accordion-header {
        padding: 15px 20px;
    }
    
    .skill-accordion-header span {
        font-size: 0.95rem;
    }
    
    .skill-accordion-content {
        font-size: 0.9rem;
    }
}

/* 动画效果 */
@keyframes skillCardEnter {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.skill-card-modern {
    animation: skillCardEnter 0.5s ease forwards;
    opacity: 0;
}

.skill-card-modern:nth-child(1) { animation-delay: 0.1s; }
.skill-card-modern:nth-child(2) { animation-delay: 0.15s; }
.skill-card-modern:nth-child(3) { animation-delay: 0.2s; }
.skill-card-modern:nth-child(4) { animation-delay: 0.25s; }
.skill-card-modern:nth-child(5) { animation-delay: 0.3s; }
.skill-card-modern:nth-child(6) { animation-delay: 0.35s; }
.skill-card-modern:nth-child(7) { animation-delay: 0.4s; }

/* 光效动画 */
@keyframes shimmer {
    0% {
        background-position: -200% 0;
    }
    100% {
        background-position: 200% 0;
    }
}

.skill-card-modern::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        90deg,
        transparent 0%,
        rgba(255, 255, 255, 0.03) 50%,
        transparent 100%
    );
    background-size: 200% 100%;
    animation: shimmer 3s infinite;
    pointer-events: none;
}